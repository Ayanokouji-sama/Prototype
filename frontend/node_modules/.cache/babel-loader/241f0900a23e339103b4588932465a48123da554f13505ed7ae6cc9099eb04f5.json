{"ast":null,"code":"var _jsxFileName = \"F:\\\\gemini\\\\counseling-ai-app\\\\frontend\\\\src\\\\components\\\\AppContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// A mapping of your stages to their background images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backgroundMap = {\n  questionnaire: '/questionnarie-bg.jpg',\n  loading: '/loading-bg.jpg',\n  // Add a background for your loading screen\n  chat: '/background.png',\n  // The background from your chat interface\n  default: '/questionnarie-bg.jpg'\n};\nconst AppContainer = ({\n  currentStage,\n  children\n}) => {\n  _s();\n  const [backgroundImage, setBackgroundImage] = useState('');\n\n  // This effect updates the background whenever the stage changes\n  useEffect(() => {\n    const newBg = backgroundMap[currentStage] || backgroundMap.default;\n    setBackgroundImage(newBg);\n  }, [currentStage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen w-full bg-cover bg-center bg-no-repeat transition-all duration-500\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContainer, \"lqGG/+YTmH/trStH9KzANmEkvW0=\");\n_c = AppContainer;\nexport default AppContainer;\nvar _c;\n$RefreshReg$(_c, \"AppContainer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","backgroundMap","questionnaire","loading","chat","default","AppContainer","currentStage","children","_s","backgroundImage","setBackgroundImage","newBg","className","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/gemini/counseling-ai-app/frontend/src/components/AppContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// A mapping of your stages to their background images\r\nconst backgroundMap = {\r\n  questionnaire: '/questionnarie-bg.jpg',\r\n  loading: '/loading-bg.jpg', // Add a background for your loading screen\r\n  chat: '/background.png', // The background from your chat interface\r\n  default: '/questionnarie-bg.jpg'\r\n};\r\n\r\nconst AppContainer = ({ currentStage, children }) => {\r\n  const [backgroundImage, setBackgroundImage] = useState('');\r\n\r\n  // This effect updates the background whenever the stage changes\r\n  useEffect(() => {\r\n    const newBg = backgroundMap[currentStage] || backgroundMap.default;\r\n    setBackgroundImage(newBg);\r\n  }, [currentStage]);\r\n\r\n  return (\r\n    <div\r\n      className=\"min-h-screen w-full bg-cover bg-center bg-no-repeat transition-all duration-500\"\r\n      style={{ backgroundImage: `url(${backgroundImage})` }}\r\n    >\r\n      {/* All your page content will render here */}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppContainer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAG;EACpBC,aAAa,EAAE,uBAAuB;EACtCC,OAAO,EAAE,iBAAiB;EAAE;EAC5BC,IAAI,EAAE,iBAAiB;EAAE;EACzBC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,KAAK,GAAGX,aAAa,CAACM,YAAY,CAAC,IAAIN,aAAa,CAACI,OAAO;IAClEM,kBAAkB,CAACC,KAAK,CAAC;EAC3B,CAAC,EAAE,CAACL,YAAY,CAAC,CAAC;EAElB,oBACEP,OAAA;IACEa,SAAS,EAAC,iFAAiF;IAC3FC,KAAK,EAAE;MAAEJ,eAAe,EAAE,OAAOA,eAAe;IAAI,CAAE;IAAAF,QAAA,EAGrDA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACT,EAAA,CAlBIH,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}