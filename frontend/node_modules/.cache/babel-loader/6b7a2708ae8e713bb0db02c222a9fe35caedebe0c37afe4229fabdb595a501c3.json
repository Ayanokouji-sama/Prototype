{"ast":null,"code":"var _jsxFileName = \"F:\\\\gemini\\\\counseling-ai-app\\\\frontend\\\\src\\\\components\\\\ResponsiveLayout.js\";\nimport React from 'react';\n\n/**\r\n * A responsive layout component that provides a full-screen background\r\n * and centers its content. It can accept a dynamic background image.\r\n * @param {object} props - The component props.\r\n * @param {React.ReactNode} props.children - The page content to render inside the layout.\r\n * @param {string} props.bgImage - The path to the background image (e.g., '/chat-bg.jpg').\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResponsiveLayout = ({\n  children,\n  bgImage\n}) => {\n  // Set a default background image in case one isn't provided.\n  // Make sure this default image exists in your `public` folder.\n  const backgroundImage = bgImage || '/default-bg.jpg';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen w-full bg-cover bg-center bg-no-repeat flex flex-col items-center justify-center p-4 sm:p-6 lg:p-8 transition-all duration-500\"\n    // The style now dynamically uses the backgroundImage variable.\n    ,\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"w-full h-full flex items-center justify-center\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = ResponsiveLayout;\nexport default ResponsiveLayout;\nvar _c;\n$RefreshReg$(_c, \"ResponsiveLayout\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResponsiveLayout","children","bgImage","backgroundImage","className","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/gemini/counseling-ai-app/frontend/src/components/ResponsiveLayout.js"],"sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * A responsive layout component that provides a full-screen background\r\n * and centers its content. It can accept a dynamic background image.\r\n * @param {object} props - The component props.\r\n * @param {React.ReactNode} props.children - The page content to render inside the layout.\r\n * @param {string} props.bgImage - The path to the background image (e.g., '/chat-bg.jpg').\r\n */\r\nconst ResponsiveLayout = ({ children, bgImage }) => {\r\n  \r\n  // Set a default background image in case one isn't provided.\r\n  // Make sure this default image exists in your `public` folder.\r\n  const backgroundImage = bgImage || '/default-bg.jpg';\r\n\r\n  return (\r\n    <div \r\n        className=\"min-h-screen w-full bg-cover bg-center bg-no-repeat flex flex-col items-center justify-center p-4 sm:p-6 lg:p-8 transition-all duration-500\"\r\n        // The style now dynamically uses the backgroundImage variable.\r\n        style={{ backgroundImage: `url(${backgroundImage})` }}\r\n    >\r\n      {/* The 'main' tag will hold your page content (e.g., Questionnaire, ChatInterface) */}\r\n      <main className=\"w-full h-full flex items-center justify-center\">\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResponsiveLayout;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAElD;EACA;EACA,MAAMC,eAAe,GAAGD,OAAO,IAAI,iBAAiB;EAEpD,oBACEH,OAAA;IACIK,SAAS,EAAC;IACV;IAAA;IACAC,KAAK,EAAE;MAAEF,eAAe,EAAE,OAAOA,eAAe;IAAI,CAAE;IAAAF,QAAA,eAGxDF,OAAA;MAAMK,SAAS,EAAC,gDAAgD;MAAAH,QAAA,EAC7DA;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACC,EAAA,GAlBIV,gBAAgB;AAoBtB,eAAeA,gBAAgB;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}