{"ast":null,"code":"var _jsxFileName = \"F:\\\\gemini\\\\counseling-ai-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Questionnaire from './components/Questionnaire';\nimport LoadingScreen from './components/LoadingScreen';\nimport ChatInterface from './components/ChatInterface';\nimport ResponsiveLayout from './components/ResponsiveLayout';\nimport './index.css';\nimport AppContainer from './components/AppContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentStage, setCurrentStage] = useState('questionnaire');\n  const [sessionData, setSessionData] = useState(null);\n  const handleQuestionnaireComplete = data => {\n    console.log('Questionnaire successful. Session data:', data);\n    setSessionData(data);\n    setCurrentStage('loading');\n  };\n  const handleLoadingComplete = () => {\n    console.log('Loading complete, proceeding to chat.');\n    setCurrentStage('chat');\n  };\n  const renderCurrentStage = () => {\n    switch (currentStage) {\n      case 'questionnaire':\n        return /*#__PURE__*/_jsxDEV(ResponsiveLayout, {\n          bgImage: \"/questionnaire-bg.jpg\",\n          children: /*#__PURE__*/_jsxDEV(Questionnaire, {\n            onComplete: handleQuestionnaireComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      case 'loading':\n        // Assuming the loading screen should also have a background\n        return /*#__PURE__*/_jsxDEV(ResponsiveLayout, {\n          bgImage: \"/loading-bg.jpg\",\n          children: /*#__PURE__*/_jsxDEV(LoadingScreen, {\n            onComplete: handleLoadingComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this);\n      case 'chat':\n        return /*#__PURE__*/_jsxDEV(ResponsiveLayout, {\n          bgImage: \"/chat-bg.jpg\",\n          children: /*#__PURE__*/_jsxDEV(ChatInterface, {\n            sessionData: sessionData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(ResponsiveLayout, {\n          bgImage: \"/questionnaire-bg.jpg\",\n          children: /*#__PURE__*/_jsxDEV(Questionnaire, {\n            onComplete: handleQuestionnaireComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    currentStage: currentStage,\n    children: renderCurrentStage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1njfgHdOx+eIT9kLS1CKVO8o37s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Questionnaire","LoadingScreen","ChatInterface","ResponsiveLayout","AppContainer","jsxDEV","_jsxDEV","App","_s","currentStage","setCurrentStage","sessionData","setSessionData","handleQuestionnaireComplete","data","console","log","handleLoadingComplete","renderCurrentStage","bgImage","children","onComplete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/gemini/counseling-ai-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Questionnaire from './components/Questionnaire';\r\nimport LoadingScreen from './components/LoadingScreen';\r\nimport ChatInterface from './components/ChatInterface';\r\nimport ResponsiveLayout from './components/ResponsiveLayout'; \r\n\r\nimport './index.css';\r\nimport AppContainer from './components/AppContainer';\r\n\r\nfunction App() {\r\n  const [currentStage, setCurrentStage] = useState('questionnaire');\r\n  const [sessionData, setSessionData] = useState(null);\r\n\r\n  const handleQuestionnaireComplete = (data) => {\r\n    console.log('Questionnaire successful. Session data:', data);\r\n    setSessionData(data);\r\n    setCurrentStage('loading');\r\n  };\r\n\r\n  const handleLoadingComplete = () => {\r\n    console.log('Loading complete, proceeding to chat.');\r\n    setCurrentStage('chat');\r\n  };\r\n\r\n    const renderCurrentStage = () => {\r\n    switch (currentStage) {\r\n      case 'questionnaire':\r\n        return (\r\n          <ResponsiveLayout bgImage=\"/questionnaire-bg.jpg\">\r\n            <Questionnaire onComplete={handleQuestionnaireComplete} />\r\n          </ResponsiveLayout>\r\n        );\r\n      case 'loading':\r\n        // Assuming the loading screen should also have a background\r\n        return (\r\n          <ResponsiveLayout bgImage=\"/loading-bg.jpg\"> \r\n            <LoadingScreen onComplete={handleLoadingComplete} />\r\n          </ResponsiveLayout>\r\n        );\r\n      case 'chat':\r\n        return (\r\n          <ResponsiveLayout bgImage=\"/chat-bg.jpg\">\r\n            <ChatInterface sessionData={sessionData} />\r\n          </ResponsiveLayout>\r\n        );\r\n      default:\r\n        return (\r\n          <ResponsiveLayout bgImage=\"/questionnaire-bg.jpg\">\r\n            <Questionnaire onComplete={handleQuestionnaireComplete} />\r\n          </ResponsiveLayout>\r\n        );\r\n    }\r\n  };\r\n\r\n   return (\r\n    <AppContainer currentStage={currentStage}>\r\n      {renderCurrentStage()}\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,gBAAgB,MAAM,+BAA+B;AAE5D,OAAO,aAAa;AACpB,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,eAAe,CAAC;EACjE,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMc,2BAA2B,GAAIC,IAAI,IAAK;IAC5CC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,IAAI,CAAC;IAC5DF,cAAc,CAACE,IAAI,CAAC;IACpBJ,eAAe,CAAC,SAAS,CAAC;EAC5B,CAAC;EAED,MAAMO,qBAAqB,GAAGA,CAAA,KAAM;IAClCF,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACpDN,eAAe,CAAC,MAAM,CAAC;EACzB,CAAC;EAEC,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IACjC,QAAQT,YAAY;MAClB,KAAK,eAAe;QAClB,oBACEH,OAAA,CAACH,gBAAgB;UAACgB,OAAO,EAAC,uBAAuB;UAAAC,QAAA,eAC/Cd,OAAA,CAACN,aAAa;YAACqB,UAAU,EAAER;UAA4B;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAEvB,KAAK,SAAS;QACZ;QACA,oBACEnB,OAAA,CAACH,gBAAgB;UAACgB,OAAO,EAAC,iBAAiB;UAAAC,QAAA,eACzCd,OAAA,CAACL,aAAa;YAACoB,UAAU,EAAEJ;UAAsB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAEvB,KAAK,MAAM;QACT,oBACEnB,OAAA,CAACH,gBAAgB;UAACgB,OAAO,EAAC,cAAc;UAAAC,QAAA,eACtCd,OAAA,CAACJ,aAAa;YAACS,WAAW,EAAEA;UAAY;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC;MAEvB;QACE,oBACEnB,OAAA,CAACH,gBAAgB;UAACgB,OAAO,EAAC,uBAAuB;UAAAC,QAAA,eAC/Cd,OAAA,CAACN,aAAa;YAACqB,UAAU,EAAER;UAA4B;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;IAEzB;EACF,CAAC;EAEA,oBACCnB,OAAA,CAACF,YAAY;IAACK,YAAY,EAAEA,YAAa;IAAAW,QAAA,EACtCF,kBAAkB,CAAC;EAAC;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEnB;AAACjB,EAAA,CAlDQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}