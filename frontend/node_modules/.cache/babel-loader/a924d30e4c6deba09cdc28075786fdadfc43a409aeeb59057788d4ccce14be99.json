{"ast":null,"code":"var _jsxFileName = \"F:\\\\hackathon\\\\counseling-ai-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Questionnaire from './components/Questionnaire';\nimport LoadingScreen from './components/LoadingScreen';\nimport ChatInterface from './components/ChatInterface';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentStage, setCurrentStage] = useState('questionnaire');\n  const [sessionData, setSessionData] = useState(null);\n  const handleQuestionnaireComplete = data => {\n    console.log('Questionnaire successful. Session data:', data);\n    setSessionData(data);\n    setCurrentStage('loading');\n  };\n  const handleLoadingComplete = () => {\n    console.log('Loading complete, proceeding to chat.');\n    setCurrentStage('chat');\n  };\n  const renderCurrentStage = () => {\n    switch (currentStage) {\n      case 'questionnaire':\n        return /*#__PURE__*/_jsxDEV(Questionnaire, {\n          onComplete: handleQuestionnaireComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 16\n        }, this);\n      case 'loading':\n        return /*#__PURE__*/_jsxDEV(LoadingScreen, {\n          onComplete: handleLoadingComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this);\n      case 'chat':\n        return /*#__PURE__*/_jsxDEV(ChatInterface, {\n          sessionData: sessionData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Questionnaire, {\n          onComplete: handleQuestionnaireComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font-sans antialiased text-gray-800\",\n    children: renderCurrentStage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1njfgHdOx+eIT9kLS1CKVO8o37s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Questionnaire","LoadingScreen","ChatInterface","jsxDEV","_jsxDEV","App","_s","currentStage","setCurrentStage","sessionData","setSessionData","handleQuestionnaireComplete","data","console","log","handleLoadingComplete","renderCurrentStage","onComplete","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["F:/hackathon/counseling-ai-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Questionnaire from './components/Questionnaire';\r\nimport LoadingScreen from './components/LoadingScreen';\r\nimport ChatInterface from './components/ChatInterface';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  const [currentStage, setCurrentStage] = useState('questionnaire');\r\n  const [sessionData, setSessionData] = useState(null);\r\n\r\n  const handleQuestionnaireComplete = (data) => {\r\n    console.log('Questionnaire successful. Session data:', data);\r\n    setSessionData(data);\r\n    setCurrentStage('loading');\r\n  };\r\n\r\n  const handleLoadingComplete = () => {\r\n    console.log('Loading complete, proceeding to chat.');\r\n    setCurrentStage('chat');\r\n  };\r\n\r\n  const renderCurrentStage = () => {\r\n    switch (currentStage) {\r\n      case 'questionnaire':\r\n        return <Questionnaire onComplete={handleQuestionnaireComplete} />;\r\n      case 'loading':\r\n        return <LoadingScreen onComplete={handleLoadingComplete} />;\r\n      case 'chat':\r\n        return <ChatInterface sessionData={sessionData} />;\r\n      default:\r\n        return <Questionnaire onComplete={handleQuestionnaireComplete} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"font-sans antialiased text-gray-800\">\r\n      {renderCurrentStage()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,eAAe,CAAC;EACjE,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMY,2BAA2B,GAAIC,IAAI,IAAK;IAC5CC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,IAAI,CAAC;IAC5DF,cAAc,CAACE,IAAI,CAAC;IACpBJ,eAAe,CAAC,SAAS,CAAC;EAC5B,CAAC;EAED,MAAMO,qBAAqB,GAAGA,CAAA,KAAM;IAClCF,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACpDN,eAAe,CAAC,MAAM,CAAC;EACzB,CAAC;EAED,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,QAAQT,YAAY;MAClB,KAAK,eAAe;QAClB,oBAAOH,OAAA,CAACJ,aAAa;UAACiB,UAAU,EAAEN;QAA4B;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACnE,KAAK,SAAS;QACZ,oBAAOjB,OAAA,CAACH,aAAa;UAACgB,UAAU,EAAEF;QAAsB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC7D,KAAK,MAAM;QACT,oBAAOjB,OAAA,CAACF,aAAa;UAACO,WAAW,EAAEA;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACpD;QACE,oBAAOjB,OAAA,CAACJ,aAAa;UAACiB,UAAU,EAAEN;QAA4B;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IACrE;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,qCAAqC;IAAAC,QAAA,EACjDP,kBAAkB,CAAC;EAAC;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACf,EAAA,CAjCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}